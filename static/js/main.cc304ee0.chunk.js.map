{"version":3,"sources":["Table.tsx","App.tsx","index.tsx"],"names":["FilterTableDemo","props","onDelete","onCategoryToggle","onCategorySelect","onFilterToggle","onFilterSelect","onInputChange","onStatusSelect","onNameInput","onLocationSelect","rows","tests","map","t","cells","ID","Category","Title","Tags","join","Estimate","Require","Link","Runs","state","filters","location","name","status","currentCategory","isFilterDropdownOpen","isCategoryDropdownOpen","nameInput","columns","title","inputValue","type","id","setState","prevState","toLowerCase","filter","s","isOpen","event","target","innerText","newValue","selection","checked","prevSelections","value","key","prevFilters","includes","this","ToolbarItem","Dropdown","onSelect","position","DropdownPosition","left","toggle","DropdownToggle","onToggle","style","width","dropdownItems","DropdownItem","locationMenuItems","SelectOption","statusMenuItems","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","Select","aria-label","selections","placeholderText","InputGroup","TextInput","onChange","placeholder","onKeyDown","Button","variant","ButtonVariant","control","onClick","SelectVariant","checkbox","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","toggleIcon","breakpoint","ToolbarGroup","buildCategoryDropdown","buildFilterDropdown","loading","filteredRows","length","row","some","renderToolbar","Table","Bullseye","EmptyState","EmptyStateIcon","icon","SearchIcon","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc304ee0.chunk.js","sourcesContent":["import \"@patternfly/react-core/dist/styles/base.css\";\nimport tests from \"./tests.json\";\n\nimport * as React from \"react\";\nimport {\n  Button,\n  ButtonVariant,\n  Bullseye,\n  Toolbar,\n  ToolbarItem,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarToggleGroup,\n  ToolbarGroup,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  InputGroup,\n  Title,\n  Select,\n  SelectOption,\n  SelectVariant,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport { SearchIcon, FilterIcon } from \"@patternfly/react-icons\";\nimport { Table, TableHeader, TableBody } from \"@patternfly/react-table\";\n\nclass FilterTableDemo extends React.Component<any, any> {\n  private onDelete: any;\n  private onCategoryToggle: any;\n  private onCategorySelect: any;\n  private onFilterToggle: any;\n  private onFilterSelect: any;\n  private onInputChange: any;\n  private onStatusSelect: any;\n  private onNameInput: any;\n  private onLocationSelect: any;\n\n  constructor(props: any) {\n    super(props);\n\n    const rows = tests.map((t) => ({\n      cells: [\n        t.ID,\n        t.Category,\n        t.Title,\n        t.Tags.join(\" \"),\n        t.Estimate,\n        t.Require.join(\" \"),\n        t.Link,\n        t.Runs,\n      ],\n    }));\n\n    this.state = {\n      filters: {\n        location: [],\n        name: [],\n        status: [],\n      },\n      currentCategory: \"Location\",\n      isFilterDropdownOpen: false,\n      isCategoryDropdownOpen: false,\n      nameInput: \"\",\n      columns: [\n        { title: \"ID\" },\n        { title: \"Category\" },\n        { title: \"Title\" },\n        { title: \"Tags\" },\n        { title: \"Estimate\" },\n        { title: \"Require\" },\n        { title: \"Link\" },\n        { title: \"Runs\" },\n      ],\n      rows: rows,\n      inputValue: \"\",\n    };\n\n    this.onDelete = (type: any = \"\", id: any = \"\") => {\n      if (type) {\n        this.setState((prevState: any) => {\n          prevState.filters[type.toLowerCase()] = prevState.filters[\n            type.toLowerCase()\n          ].filter((s: any) => s !== id);\n          return {\n            filters: prevState.filters,\n          };\n        });\n      } else {\n        this.setState({\n          filters: {\n            location: [],\n            name: [],\n            status: [],\n          },\n        });\n      }\n    };\n\n    this.onCategoryToggle = (isOpen: any) => {\n      this.setState({\n        isCategoryDropdownOpen: isOpen,\n      });\n    };\n\n    this.onCategorySelect = (event: any) => {\n      this.setState({\n        currentCategory: event.target.innerText,\n        isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n      });\n    };\n\n    this.onFilterToggle = (isOpen: any) => {\n      this.setState({\n        isFilterDropdownOpen: isOpen,\n      });\n    };\n\n    this.onFilterSelect = (event: any) => {\n      this.setState({\n        isFilterDropdownOpen: !this.state.isFilterDropdownOpen,\n      });\n    };\n\n    this.onInputChange = (newValue: any) => {\n      this.setState({ inputValue: newValue });\n    };\n\n    this.onStatusSelect = (event: any, selection: any) => {\n      const checked = event.target.checked;\n      this.setState((prevState: any) => {\n        const prevSelections = prevState.filters[\"status\"];\n        return {\n          filters: {\n            ...prevState.filters,\n            status: checked\n              ? [...prevSelections, selection]\n              : prevSelections.filter((value: any) => value !== selection),\n          },\n        };\n      });\n    };\n\n    this.onNameInput = (event: any) => {\n      if (event.key && event.key !== \"Enter\") {\n        return;\n      }\n\n      const { inputValue } = this.state;\n      this.setState((prevState: any) => {\n        const prevFilters = prevState.filters[\"name\"];\n        return {\n          filters: {\n            ...prevState.filters,\n            // eslint-disable-next-line\n            [\"name\"]: prevFilters.includes(inputValue)\n              ? prevFilters\n              : [...prevFilters, inputValue],\n          },\n          inputValue: \"\",\n        };\n      });\n    };\n\n    this.onLocationSelect = (event: any, selection: any) => {\n      this.setState((prevState: any) => {\n        return {\n          filters: {\n            ...prevState.filters,\n            // eslint-disable-next-line\n            [\"location\"]: [selection],\n          },\n        };\n      });\n      this.onFilterSelect();\n    };\n  }\n\n  buildCategoryDropdown() {\n    const { isCategoryDropdownOpen, currentCategory } = this.state;\n\n    return (\n      <ToolbarItem>\n        <Dropdown\n          onSelect={this.onCategorySelect}\n          position={DropdownPosition.left}\n          toggle={\n            <DropdownToggle\n              onToggle={this.onCategoryToggle}\n              style={{ width: \"100%\" }}\n            >\n              <FilterIcon /> {currentCategory}\n            </DropdownToggle>\n          }\n          isOpen={isCategoryDropdownOpen}\n          dropdownItems={[\n            <DropdownItem key=\"cat1\">Location</DropdownItem>,\n            <DropdownItem key=\"cat2\">Name</DropdownItem>,\n            <DropdownItem key=\"cat3\">Status</DropdownItem>,\n          ]}\n          style={{ width: \"100%\" }}\n        ></Dropdown>\n      </ToolbarItem>\n    );\n  }\n\n  buildFilterDropdown() {\n    const {\n      currentCategory,\n      isFilterDropdownOpen,\n      inputValue,\n      filters,\n    } = this.state;\n\n    const locationMenuItems = [\n      <SelectOption key=\"raleigh\" value=\"Raleigh\" />,\n      <SelectOption key=\"westford\" value=\"Westford\" />,\n      <SelectOption key=\"boston\" value=\"Boston\" />,\n      <SelectOption key=\"brno\" value=\"Brno\" />,\n      <SelectOption key=\"bangalore\" value=\"Bangalore\" />,\n    ];\n\n    const statusMenuItems = [\n      <SelectOption key=\"statusRunning\" value=\"Running\" />,\n      <SelectOption key=\"statusStopped\" value=\"Stopped\" />,\n      <SelectOption key=\"statusDown\" value=\"Down\" />,\n      <SelectOption key=\"statusDegraded\" value=\"Degraded\" />,\n      <SelectOption key=\"statusMaint\" value=\"Needs Maintainence\" />,\n    ];\n\n    return (\n      <React.Fragment>\n        <ToolbarFilter\n          chips={filters.location}\n          deleteChip={this.onDelete}\n          categoryName=\"Location\"\n          showToolbarItem={currentCategory === \"Location\"}\n        >\n          <Select\n            aria-label=\"Location\"\n            onToggle={this.onFilterToggle}\n            onSelect={this.onLocationSelect}\n            selections={filters.location[0]}\n            isOpen={isFilterDropdownOpen}\n            placeholderText=\"Any\"\n          >\n            {locationMenuItems}\n          </Select>\n        </ToolbarFilter>\n        <ToolbarFilter\n          chips={filters.name}\n          deleteChip={this.onDelete}\n          categoryName=\"Name\"\n          showToolbarItem={currentCategory === \"Name\"}\n        >\n          <InputGroup>\n            <TextInput\n              name=\"nameInput\"\n              id=\"nameInput1\"\n              type=\"search\"\n              aria-label=\"name filter\"\n              onChange={this.onInputChange}\n              value={inputValue}\n              placeholder=\"Filter by name...\"\n              onKeyDown={this.onNameInput}\n            />\n            <Button\n              variant={ButtonVariant.control}\n              aria-label=\"search button for search input\"\n              onClick={this.onNameInput}\n            >\n              <SearchIcon />\n            </Button>\n          </InputGroup>\n        </ToolbarFilter>\n        <ToolbarFilter\n          chips={filters.status}\n          deleteChip={this.onDelete}\n          categoryName=\"Status\"\n          showToolbarItem={currentCategory === \"Status\"}\n        >\n          <Select\n            variant={SelectVariant.checkbox}\n            aria-label=\"Status\"\n            onToggle={this.onFilterToggle}\n            onSelect={this.onStatusSelect}\n            selections={filters.status}\n            isOpen={isFilterDropdownOpen}\n            placeholderText=\"Filter by status\"\n          >\n            {statusMenuItems}\n          </Select>\n        </ToolbarFilter>\n      </React.Fragment>\n    );\n  }\n\n  renderToolbar() {\n    // eslint-disable-next-line\n    const { filters } = this.state;\n    return (\n      <Toolbar\n        id=\"toolbar-with-chip-groups\"\n        clearAllFilters={this.onDelete}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"xl\">\n            <ToolbarGroup variant=\"filter-group\">\n              {this.buildCategoryDropdown()}\n              {this.buildFilterDropdown()}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n\n  render() {\n    const { loading, rows, columns, filters } = this.state;\n\n    const filteredRows =\n      filters.name.length > 0 ||\n      filters.location.length > 0 ||\n      filters.status.length > 0\n        ? rows.filter((row: any) => {\n            return (\n              (filters.name.length === 0 ||\n                filters.name.some((name: any) =>\n                  row.cells[0].toLowerCase().includes(name.toLowerCase())\n                )) &&\n              (filters.location.length === 0 ||\n                filters.location.includes(row.cells[5])) &&\n              (filters.status.length === 0 ||\n                filters.status.includes(row.cells[4]))\n            );\n          })\n        : rows;\n\n    return (\n      <React.Fragment>\n        {this.renderToolbar()}\n        {!loading && filteredRows.length > 0 && (\n          <Table\n            cells={columns}\n            rows={filteredRows}\n            // onSelect={this.onRowSelect}\n            aria-label=\"Test Cases\"\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        )}\n        {!loading && filteredRows.length === 0 && (\n          <React.Fragment>\n            <Table\n              cells={columns}\n              rows={filteredRows}\n              // onSelect={this.onRowSelect}\n              aria-label=\"Test Cases\"\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n            <Bullseye>\n              <EmptyState>\n                <EmptyStateIcon icon={SearchIcon} />\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No results found\n                </Title>\n                <EmptyStateBody>\n                  No results match this filter criteria. Remove all filters or\n                  clear all filters to show results.\n                </EmptyStateBody>\n                <EmptyStateSecondaryActions>\n                  <Button variant=\"link\" onClick={() => this.onDelete(null)}>\n                    Clear all filters // and do stuff\n                  </Button>\n                </EmptyStateSecondaryActions>\n              </EmptyState>\n            </Bullseye>\n          </React.Fragment>\n        )}\n        {loading && (\n          <Title headingLevel=\"h2\" size=\"3xl\">\n            Please wait while loading data\n          </Title>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FilterTableDemo;\n","import React from \"react\";\nimport Table from \"./Table\";\n\nfunction App() {\n  return <Table />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}